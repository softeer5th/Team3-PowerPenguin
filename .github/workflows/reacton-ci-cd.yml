name: Deploy ReactON

on:
  push:
    branches: [ "dev", "main" ]
    paths:
      - "back-end/reacton/**"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Generate application.properties from GitHub Secrets
        run: |
           echo "🔍 Ensuring the resources directory exists..."
           mkdir -p back-end/reacton/src/main/resources
           echo "🔍 Creating application.properties from secrets..."
           rm -f back-end/reacton/src/main/resources/application.properties
           touch back-end/reacton/src/main/resources/application.properties
           echo "${{ secrets.PROPERTIES }}" | tr -d '\r' > back-end/reacton/src/main/resources/application.properties
           echo "📂 Listing resources directory content:"
           ls -lh back-end/reacton/src/main/resources/
           echo "📄 application.properties content:"
           cat back-end/reacton/src/main/resources/application.properties || echo "❌ application.properties is empty!"

      - name: Grant execute permission for gradlew
        run: chmod +x back-end/reacton/gradlew

      - name: Build with Gradle
        run: cd back-end/reacton && ./gradlew clean build -x test --build-cache

      - name: Check Build Artifact
        run: ls -lh back-end/reacton/build/libs/ || (echo "Build artifact missing!" && exit 1)

      - name: Docker Build and Push
        run: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/reacton-back:latest || true
          sudo docker build --platform linux/arm64 \
            -f back-end/reacton/Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/reacton-back:latest back-end/reacton
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/reacton-back:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            set -e  # 🔥 오류 발생 시 즉시 종료
            cd ~/app/back-end/reacton

            echo "🔄 Pulling latest Docker images..."
            sudo docker-compose pull || { echo "❌ Failed to pull Docker images"; exit 1; }

            echo "🚀 Running Docker containers..."
            sudo docker-compose up -d --remove-orphans || { echo "❌ Failed to start containers"; exit 1; }

            echo "🧹 Cleaning up unused images..."
            sudo docker image prune -f || { echo "❌ Failed to prune Docker images"; exit 1; }

            echo "✅ Deployment completed successfully!"
